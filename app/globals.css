@import "tailwindcss/preflight";

@tailwind utilities;

@font-face {
  font-family: 'Press Start 2P';
  src: url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
}

:root {
  --primary: #ff0066;
  --secondary: #00ff99;
  --accent1: #ff3300;
  --accent2: #33ccff;
  --background: #000000;
  --text: #ffffff;
  --foreground: #ffffff;
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes scanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes neonPulse {
  0%, 100% {
    text-shadow: 0 0 4px #fff,
                0 0 11px #fff,
                0 0 19px #fff,
                0 0 40px var(--primary),
                0 0 80px var(--primary),
                0 0 90px var(--primary),
                0 0 100px var(--primary),
                0 0 150px var(--primary);
  }
  50% {
    text-shadow: 0 0 4px #fff,
                0 0 8px #fff,
                0 0 11px #fff,
                0 0 20px var(--primary),
                0 0 40px var(--primary),
                0 0 45px var(--primary),
                0 0 50px var(--primary),
                0 0 75px var(--primary);
  }
}

.glitch {
  animation: glitch 0.3s infinite;
  position: relative;
}

.scanline {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 10px;
  background: rgba(255, 255, 255, 0.1);
  animation: scanline 6s linear infinite;
  pointer-events: none;
  z-index: 50;
}

.retro-container {
  background: linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(20,20,20,1) 100%);
  position: relative;
  overflow: hidden;
}

.retro-grid {
  background-image: linear-gradient(rgba(255,255,255,0.1) 1px, transparent 1px),
                    linear-gradient(90deg, rgba(255,255,255,0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform: perspective(500px) rotateX(60deg);
  transform-origin: top;
  animation: grid-move 20s linear infinite;
}

@keyframes grid-move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 20px;
  }
}

.neon-text {
  text-shadow: 0 0 5px #fff,
               0 0 10px #fff,
               0 0 20px var(--primary),
               0 0 30px var(--primary),
               0 0 40px var(--primary);
}

body {
  background: var(--background);
  color: var(--foreground);
  margin: 0;
  padding: 0;
  font-family: 'Press Start 2P', monospace;
}

.pixelated {
  image-rendering: pixelated;
  clip-path: polygon(
    0 4px, 4px 4px, 4px 0,
    calc(100% - 4px) 0, calc(100% - 4px) 4px, 100% 4px,
    100% calc(100% - 4px), calc(100% - 4px) calc(100% - 4px), calc(100% - 4px) 100%,
    4px 100%, 4px calc(100% - 4px), 0 calc(100% - 4px)
  );
}

.section-transition {
  position: relative;
}

.section-transition::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 4px;
  background: repeating-linear-gradient(
    to right,
    var(--primary) 0,
    var(--primary) 10px,
    transparent 10px,
    transparent 20px
  );
}

.floating {
  animation: float 3s ease-in-out infinite;
}

.pixel-corners {
  clip-path: polygon(
    0 10px,
    10px 10px,
    10px 0,
    calc(100% - 10px) 0,
    calc(100% - 10px) 10px,
    100% 10px,
    100% calc(100% - 10px),
    calc(100% - 10px) calc(100% - 10px),
    calc(100% - 10px) 100%,
    10px 100%,
    10px calc(100% - 10px),
    0 calc(100% - 10px)
  );
}

.neon-pulse {
  animation: neonPulse 2s infinite;
}

.neon-border {
  box-shadow: 0 0 5px var(--secondary),
              0 0 10px var(--secondary),
              0 0 15px var(--secondary),
              0 0 20px var(--secondary);
}

.arcade-pattern {
  background-image: radial-gradient(circle at center, var(--primary) 0.5px, transparent 0.5px);
  background-size: 10px 10px;
  opacity: 0.1;
}

@keyframes borderFlow {
  0% {
    border-image-source: linear-gradient(45deg, var(--primary), var(--secondary));
  }
  50% {
    border-image-source: linear-gradient(45deg, var(--secondary), var(--accent1));
  }
  100% {
    border-image-source: linear-gradient(45deg, var(--accent1), var(--primary));
  }
}

.flowing-border {
  border: 2px solid;
  border-image-slice: 1;
  animation: borderFlow 3s linear infinite;
}

.bg-scanlines {
  background: repeating-linear-gradient(
    0deg,
    var(--secondary) 0%,
    var(--secondary) 1px,
    transparent 1px,
    transparent 2px
  );
  background-size: 100% 4px;
}

.border-gradient {
  position: relative;
}

.border-gradient::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 2px;
  background: linear-gradient(45deg, var(--primary), var(--secondary));
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}

/* Terminal specific styles */
.terminal-window {
  height: 100vh;
  width: 100%;
  overflow-y: auto;
  position: relative;
}

/* Ensure the fixed input container is always visible */
.terminal-input {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
}
